/*
 * Cart Purchase Microservice
 * Cart purchase microservice
 *
 * OpenAPI spec version: 1.0.0
 * Contact: satoshikisaki@hotmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package br.com.cartpurchase.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;

import java.math.BigDecimal;
import java.util.Objects;

/**
 * AddItem
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-10-17T21:51:11.721328500-03:00[America/Sao_Paulo]")
public class AddItem {

    @JsonProperty("productTitle")
    private String productTitle = null;

    @JsonProperty("description")
    private String description = null;

    @JsonProperty("brandName")
    private String brandName = null;

    @JsonProperty("material")
    private String material = null;

    @JsonProperty("color")
    private String color = null;

    @JsonProperty("quantity")
    private Integer quantity = null;

    @JsonProperty("dimensions")
    private Dimensions dimensions = null;

    @JsonProperty("price")
    private BigDecimal price = null;

    /**
     * Get productTitle
     *
     * @return productTitle
     **/
    @Schema(example = "Water Bottle 1L", description = "")
    public String getProductTitle() {
        return productTitle;
    }

    public void setProductTitle(String productTitle) {
        this.productTitle = productTitle;
    }

    /**
     * Get description
     *
     * @return description
     **/
    @Schema(example = "The portable water can be used in various occasions. The gym, camping, traveling, as well as in the office and at home.", description = "")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Get brandName
     *
     * @return brandName
     **/
    @Schema(example = "Xiaomi", description = "")
    public String getBrandName() {
        return brandName;
    }

    public void setBrandName(String brandName) {
        this.brandName = brandName;
    }

    /**
     * Get material
     *
     * @return material
     **/
    @Schema(example = "Plastic", description = "")
    public String getMaterial() {
        return material;
    }

    public void setMaterial(String material) {
        this.material = material;
    }

    /**
     * Get color
     *
     * @return color
     **/
    @Schema(example = "Red", description = "")
    public String getColor() {
        return color;
    }

    public void setColor(String color) {
        this.color = color;
    }

    /**
     * Get quantity
     *
     * @return quantity
     **/
    @Schema(example = "1", description = "")
    public Integer getQuantity() {
        return quantity;
    }

    public void setQuantity(Integer quantity) {
        this.quantity = quantity;
    }

    /**
     * Get dimensions
     *
     * @return dimensions
     **/
    @Schema(description = "")
    public Dimensions getDimensions() {
        return dimensions;
    }

    public void setDimensions(Dimensions dimensions) {
        this.dimensions = dimensions;
    }

    /**
     * Get price
     *
     * @return price
     **/
    @Schema(example = "9.99", description = "")
    public BigDecimal getPrice() {
        return price;
    }

    public void setPrice(BigDecimal price) {
        this.price = price;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AddItem addItem = (AddItem) o;
        return Objects.equals(this.productTitle, addItem.productTitle) &&
                Objects.equals(this.description, addItem.description) &&
                Objects.equals(this.brandName, addItem.brandName) &&
                Objects.equals(this.material, addItem.material) &&
                Objects.equals(this.color, addItem.color) &&
                Objects.equals(this.quantity, addItem.quantity) &&
                Objects.equals(this.dimensions, addItem.dimensions) &&
                Objects.equals(this.price, addItem.price);
    }

    @Override
    public String toString() {
        return "AddItem{" +
                "productTitle='" + productTitle + '\'' +
                ", description='" + description + '\'' +
                ", brandName='" + brandName + '\'' +
                ", material='" + material + '\'' +
                ", color='" + color + '\'' +
                ", quantity=" + quantity +
                ", dimensions=" + dimensions +
                ", price=" + price +
                '}';
    }

}
