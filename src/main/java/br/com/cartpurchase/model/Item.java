/*
 * Cart Purchase Microservice
 * Cart purchase microservice
 *
 * OpenAPI spec version: 1.0.0
 * Contact: satoshikisaki@hotmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package br.com.cartpurchase.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;

import java.math.BigDecimal;
import java.util.Objects;

/**
 * Item
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-10-17T21:51:11.721328500-03:00[America/Sao_Paulo]")public class Item {

  @JsonProperty("id")

  private Integer id = null;

  @JsonProperty("productTitle")

  private String productTitle = null;

  @JsonProperty("description")

  private String description = null;

  @JsonProperty("brandName")

  private String brandName = null;

  @JsonProperty("material")

  private String material = null;

  @JsonProperty("color")

  private String color = null;

  @JsonProperty("quantity")

  private Integer quantity = null;

  @JsonProperty("dimensions")

  private Dimensions dimensions = null;

  @JsonProperty("price")

  private BigDecimal price = null;
  public Item id(Integer id) {
    this.id = id;
    return this;
  }

  

  /**
  * Get id
  * @return id
  **/
  @Schema(example = "1", description = "")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }
  public Item productTitle(String productTitle) {
    this.productTitle = productTitle;
    return this;
  }

  

  /**
  * Get productTitle
  * @return productTitle
  **/
  @Schema(example = "Water Bottle 1L", description = "")
  public String getProductTitle() {
    return productTitle;
  }
  public void setProductTitle(String productTitle) {
    this.productTitle = productTitle;
  }
  public Item description(String description) {
    this.description = description;
    return this;
  }

  

  /**
  * Get description
  * @return description
  **/
  @Schema(example = "The portable water can be used in various occasions. The gym, camping, traveling, as well as in the office and at home.", description = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }
  public Item brandName(String brandName) {
    this.brandName = brandName;
    return this;
  }

  

  /**
  * Get brandName
  * @return brandName
  **/
  @Schema(example = "Xiaomi", description = "")
  public String getBrandName() {
    return brandName;
  }
  public void setBrandName(String brandName) {
    this.brandName = brandName;
  }
  public Item material(String material) {
    this.material = material;
    return this;
  }

  

  /**
  * Get material
  * @return material
  **/
  @Schema(example = "Plastic", description = "")
  public String getMaterial() {
    return material;
  }
  public void setMaterial(String material) {
    this.material = material;
  }
  public Item color(String color) {
    this.color = color;
    return this;
  }

  

  /**
  * Get color
  * @return color
  **/
  @Schema(example = "Red", description = "")
  public String getColor() {
    return color;
  }
  public void setColor(String color) {
    this.color = color;
  }
  public Item quantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

  

  /**
  * Get quantity
  * @return quantity
  **/
  @Schema(example = "1", description = "")
  public Integer getQuantity() {
    return quantity;
  }
  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }
  public Item dimensions(Dimensions dimensions) {
    this.dimensions = dimensions;
    return this;
  }

  

  /**
  * Get dimensions
  * @return dimensions
  **/
  @Schema(description = "")
  public Dimensions getDimensions() {
    return dimensions;
  }
  public void setDimensions(Dimensions dimensions) {
    this.dimensions = dimensions;
  }
  public Item price(BigDecimal price) {
    this.price = price;
    return this;
  }

  

  /**
  * Get price
  * @return price
  **/
  @Schema(example = "9.99", description = "")
  public BigDecimal getPrice() {
    return price;
  }
  public void setPrice(BigDecimal price) {
    this.price = price;
  }
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Item item = (Item) o;
    return Objects.equals(this.id, item.id) &&
        Objects.equals(this.productTitle, item.productTitle) &&
        Objects.equals(this.description, item.description) &&
        Objects.equals(this.brandName, item.brandName) &&
        Objects.equals(this.material, item.material) &&
        Objects.equals(this.color, item.color) &&
        Objects.equals(this.quantity, item.quantity) &&
        Objects.equals(this.dimensions, item.dimensions) &&
        Objects.equals(this.price, item.price);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, productTitle, description, brandName, material, color, quantity, dimensions, price);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Item {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    productTitle: ").append(toIndentedString(productTitle)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    brandName: ").append(toIndentedString(brandName)).append("\n");
    sb.append("    material: ").append(toIndentedString(material)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    dimensions: ").append(toIndentedString(dimensions)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
